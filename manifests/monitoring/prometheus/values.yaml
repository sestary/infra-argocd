---
alertmanager:
  defaultRules:
    create: true
    rules:
      etcd: false
      kubeControllerManager: false
      kubeProxy: false
      network: true

  ingress:
    enabled: true

    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"

    ingressClassName: nginx

    hosts:
      - alertmanager.on.sestary.eu
    paths:
      - /

    tls:
      - hosts:
          - alertmanager.on.sestary.eu
        secretName: ingress-tls-alertmanger

prometheus:
  ingress:
    enabled: true

    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
      nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-authentik-embedded-outpost.auth-authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/prometheus
      nginx.ingress.kubernetes.io/auth-signin: |-
        https://prometheus.on.sestary.eu/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;

    ingressClassName: nginx

    hosts:
      - prometheus.on.sestary.eu
    paths:
      - /

    tls:
      - hosts:
          - prometheus.on.sestary.eu
        secretName: ingress-tls-prometheus

# Using Grafana Cloud
grafana:
  enabled: false

# MicroK8s doesn't use anye of these
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeControllerManager:
  enabled: false
kubeProxy:
  enabled: false
kubeScheduler:
  enabled: false

---
# Configure options applied to all pods
defaultPodOptions:
  automountServiceAccountToken: false

controllers:
  # Configure the main controller
  main:
    annotations:
      reloader.stakater.com/auto: "true"


    containers:
      # Configure the main application container
      main:
        env:
          - name: PGID
            value: '1000'
          - name: PUID
            value: '1000'
        image:
          # -- image repository
          repository: lscr.io/linuxserver/transmission
          # -- image tag
          # this example is not automatically updated, so be sure to use the latest image
          tag: 4.0.4-r0-ls200

      # Configure the gluetun sidecar
      gluetun:
        dependsOn: main
        image:
          # -- image repository
          repository: ghcr.io/qdm12/gluetun
          # -- image tag
          # this example is not automatically updated, so be sure to use the latest image
          tag: latest
        # -- environment variables.
        # See [image docs](https://github.com/qdm12/gluetun-wiki) for more details on how to configure
        # your VPN and how to set up port-forwarding.
        env:
          FIREWALL_INPUT_PORTS: 9091
          FIREWALL_VPN_INPUT_PORTS: 6881
          SERVER_CITIES: Toronto
          VPN_SERVICE_PROVIDER: mullvad
          VPN_TYPE: wireguard
          WIREGUARD_ADDRESSES: 10.66.51.54/32
          WIREGUARD_PRIVATE_KEY: <path:secrets.enc.yaml#wireguard_private_key>

        # Configure the container-specific securityContext
        securityContext:
          capabilities:
            add:
              - NET_ADMIN

service:
  main:
    ports:
      http:
        port: 9091

ingress:
  # Configure an Ingress for the main application
  main:
    enabled: true

    annotations:
      nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-sestary-outpost.auth-authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: |-
        https://transmission.sestary.eu/outpost.goauthentik.io/start?rd=$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;

    ingressClassName: nginx
    hosts:
      - host: transmission.sestary.eu
        paths:
          - path: /
            pathType: Prefix
            service:
              name: main
    tls:
      - hosts:
          - transmission.sestary.eu

networkpolicies:
  main:
    # -- Enables or disables the networkPolicy item. Defaults to true
    enabled: true

    # -- Configure which controller this networkPolicy should target
    controller: main

    policyTypes:
      - Egress

    # -- The rulesets for this networkPolicy
    # [[ref]](https://kubernetes.io/docs/concepts/services-networking/network-policies/#networkpolicy-resource)
    rules:
      # -- The egress rules for this networkPolicy. Allows all egress traffic by default.
      egress:
        - to:
            - ipBlock:
                cidr: 0.0.0.0/0
          ports:
            - port: 51820
              protocol: UDP

persistence:
  # Configure the main configuration storage location
  config-nas:
    enabled: true
    type: persistentVolumeClaim
    storageClass: truenas-iscsi-csi
    accessMode: ReadWriteOnce
    size: 1Gi
    advancedMounts:
      main:
        main:
          - path: /config

  downloads:
    enabled: true
    existingClaim: transmission-downloads
    advancedMounts:
      main:
        main:
          - path: /downloads
            subPath: downalods/
